==================================================================================
trunk目录
svn://192.168.1.20/platform/trunk

trunk
    |--cloud-cms                // 【云平台】中心服务器
    |--cloud-css                // 【云平台】业务服务器
    |--pd-ams                   // 【管理平台】告警服务器（未使用）
    |--pd-bss                   // 【管理平台】BSS
    |--pd-cms                   // 【管理平台】中心服务器
    |--pd-cu                    // 【管理平台】客户端
    |--pd-decoder               // 【管理平台】软解码器
    |--pd-dms                   // 【云平台】DMS（相当于管理平台的BSS）
    |--pd-framework             // 服务器框架库
    |--pd-install               // 打包脚本备份（管理平台，云平台，升级）
    |--pd-libs                  // 多个库文件
    |--pd-mds                   // 【管理平台】转发服务器
    |--pd-mss                   // 【管理平台】存储服务器
    |--pd-proxy                 // 【管理平台】代理服务器
    |--pd-pusdk                 // 设备sdk
    |--pd-sm                    // 【管理平台】（转发、存储）服务器管理客户端
    |--pd-sms                   // 【管理平台】（转发、存储）服务器管理服务端
    |--

==================================================================================
pd-libs目录
svn://192.168.1.20/platform/trunk/pd-libs

pd-libs
    |--env                      // 环境变量（编译运行平台所需设置的环境变量）
    |--gev                      // libev的封装，实现多线程loop,event模型
    |--h264bitstream-0.1.6      // 【开源库】rtp打包辅助开源库
    |--jlib                     // 类似glib，即为轻量级glib库
    |--jlive                    // 利用live555写得一个RTSP客户端
    |--jmb                      // 搜索设备服务端
    |--jnet                     // 设备sdk、设备代理所使用的网络库
    |--jpf-search-device        // 平台搜索设备客户端
    |--jxml                     // 设备sdk、设备代理、nvr_JCU所使用的协议库
    |--libev-4.04               // 【开源库】开源事件库
    |--live555                  // 【开源库】多种音视频解决方案框架
    |--mmf                      // 设备端多媒体框架
    |--mxml                     // 【开源库】xml库
    |--netembryo-0.1.1          // 【开源库】socket的封装（rtsp_server 使用）
    |--rtsp-client              // rtsp客户端（mss，nvr 使用）
    |--rtsp-parser              // rtsp协议解析库
    |--rtsp-server              // rtsp服务端（mss，代理 使用）
    |--share                    // 平台使用的网络库
    |--talk-client              // 对讲客户端（未使用）
    |--talk-server              // 对讲服务端（未使用）
    |--build_all.sh             // 编译pd-libs下，在items中列举的库文件
    |--items                    // 列举编译文件（注意有前后依赖关系）
    |--

编译pd-libs中库文件注意：
（1）使用个人权限下载pd-libs文件（如：zyt）
（2）需确保.sh文件拥有可执行权限（可使用chmod +x ./*.sh，chmod +x ./*/*.sh进行批量处理）
（3）编译完的目标文件会拷贝到个人目录的usr目录下（如：/home/zyt/usr）
（4）编译命令：./build_all.sh [debug/release]
（5）build_all.sh默认编译的为x86使用的库文件，如需要所有平台的库文件，需手动更改build_all.sh文件（只需更改几行脚本）
（6）如果usr目录下生成文件长期累积或者有时使用不一样的权限编译生成文件，可能导致问题，此时可删除再重新生成
（7）单个编译库文件的方法类似，在各个目录下，可运行./build_all.sh [debug/release] 或 ./build_script.sh [debug/release] [x86/...]

==================================================================================
设备sdk
svn://192.168.1.20/platform/trunk/pd-pusdk/jdevsdk

（1）需确保.sh文件拥有可执行权限（可使用chmod +x ./*.sh，chmod +x ./*/*.sh进行批量处理）
（2）编译：./build_all.sh [debug/release] 或 ./build_script.sh [debug/release] [x86/...]
（3）如果编译不成功，请检查$HOME/usr/目录下的相关库文件是否已经生成（由pd-libs编译生成）

==================================================================================
代理服务器服务端
svn://192.168.1.20/platform/trunk/pd-proxy/proxy-server

（1）编译：source $(path)/pd-libs/env/x86
           source ./set-x-env
           make
（2）运行：先执行source runpath.sh，再运行./proxy
（3）发布文件：proxy
               factory_info.xml
               libjxml.so
               libjnet.so
说明：
$(path)是指pd-libs目录的绝对路径；$(cross)是env目录下的各个环境文件名，例如x86；
set-x-env是指set-debug-env或者set-release-env

==================================================================================
代理服务器客户端
svn://192.168.1.20/platform/trunk/pd-proxy

项目树结构
trunk
    |--pd-proxy
        |--proxy-client
项目介绍
proxy-client
介绍：代理服务器客户端
编译：使用vs2008编译

==================================================================================
流媒体网络库
svn://192.168.1.20/platform/trunk/pd-pusdk/device_sdk

项目树结构
trunk
    |--pd-pusdk
        |--device_sdk
            |--jlive
项目介绍
jlive
介绍：流媒体网络库
编译：win32平台, 使用vs2008编译

==================================================================================
MobileNetSDK
svn://192.168.1.20/windows/trunk/MobileNetSDK

项目树结构
trunk
    |--MobileNetSDK

项目介绍
MobileNetSDK
介绍：IOS、Android手机客户端的底层库，WINDOW客户端的网络库
编译：1)IOS平台, 编译环境Mac, 使用XCode编译
      2)Android平台，编译环境cygwin, 使用NDK编译
      3)WIN32平台, 编译环境VC6.0
      编译顺序: JSocketCtrl, JNetSDK, JNMLib

==================================================================================
zouc个人目录
项目树结构
zouc
    |--jcutalk
    |--pd-ivs
    |--SoftDogConfigTool
    |--talk_mod
    |--CloudClient
    |--ffmpeg
        |--android
    |--developing
        |--h264pack(参考pd-libs)
        |--inc
        |--jlib(参考pd-libs)
        |--libev(参考pd-libs)
        |--librtsp(参考pd-libs)
        |--netnembryo-0.1.1(参考pd-libs)
        |--rtsp-client(参考pd-libs)

各项介绍
1. jcutalk
介绍：win32下的对讲库
编译：使用vs2008编译

2. pd-ivs
介绍：ivs服务器
编译：linux环境，通过make来编译

3. SoftDogConfigTool
介绍：加密狗配置工具
编译：使用vs2008编译

4. talk_mod
介绍：linux服务端对讲库
编译：linux环境，通过make编译

5. CloudClient
介绍：Android平台客户端
编译：使用Eclipse编译

6. ffmpeg
介绍：ffmpeg源代码，用于CloudClient的解码库
编译：1).先执行ffmpeg-download.sh下载源代码；
      2).执行ffmpeg-android.sh编译

7. developing
介绍：CloudClient使用的底层网络库
编译：使用NDK编译

==================================================================================
liuxw个人目录

音频混合库
svn://192.168.1.20/platform/developing/liuxw/audio_mix_lib
编译方式：
进入到audio_mix_lib目录下，执行make

解码器加密狗动态库
svn://192.168.1.20/platform/developing/liuxw/encrypt_dynamic
编译环境：vc6.0下编译

制作加密狗静态库
svn://192.168.1.20/platform/developing/liuxw/et199_encrypt_lib
编译环境：vc6.0下编译
